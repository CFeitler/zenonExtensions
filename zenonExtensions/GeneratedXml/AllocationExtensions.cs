//AUTOGENERATED FILE. Do not make any manual changes. Any changes to this file will be overwritten.

using Scada.AddIn.Contracts.Allocation;

namespace zenonExtensions
{
  public static class Allocation
  {
    public static void SetGRP_General(this IAllocation allocation, object gRP_General)
    {
      allocation.SetDynamicProperty("GRP_General",gRP_General);
    }

    public static object GetGRP_General(this IAllocation allocation)
    {
    return (object) allocation.GetDynamicProperty("GRP_General");
    }

    public static void SetSourceVariable(this IAllocation allocation, object sourceVariable)
    {
      allocation.SetDynamicProperty("SourceVariable",sourceVariable);
    }

    public static object GetSourceVariable(this IAllocation allocation)
    {
    return (object) allocation.GetDynamicProperty("SourceVariable");
    }

    public static void SetTargetVariable(this IAllocation allocation, object targetVariable)
    {
      allocation.SetDynamicProperty("TargetVariable",targetVariable);
    }

    public static object GetTargetVariable(this IAllocation allocation)
    {
    return (object) allocation.GetDynamicProperty("TargetVariable");
    }

    public static void SetTriggerVariable(this IAllocation allocation, object triggerVariable)
    {
      allocation.SetDynamicProperty("TriggerVariable",triggerVariable);
    }

    public static object GetTriggerVariable(this IAllocation allocation)
    {
    return (object) allocation.GetDynamicProperty("TriggerVariable");
    }

    public static void SetTriggerType(this IAllocation allocation, ushort triggerType)
    {
      allocation.SetDynamicProperty("TriggerType",triggerType);
    }

    public static ushort GetTriggerType(this IAllocation allocation)
    {
    return (ushort) allocation.GetDynamicProperty("TriggerType");
    }

    public static void SetSystemModelGroup(this IAllocation allocation, object systemModelGroup)
    {
      allocation.SetDynamicProperty("SystemModelGroup",systemModelGroup);
    }

    public static object GetSystemModelGroup(this IAllocation allocation)
    {
    return (object) allocation.GetDynamicProperty("SystemModelGroup");
    }

  }
}
