//AUTOGENERATED FILE. Do not make any manual changes. Any changes to this file will be overwritten.

using Scada.AddIn.Contracts.ChronologicalEventList;

namespace zenonExtensions
{
  public static class ChronologicalEventList
  {
    public static void SetQueryFilter(this IChronologicalEventList chronologicalEventList, object queryFilter)
    {
      chronologicalEventList.SetDynamicProperty("QueryFilter",queryFilter);
    }

    public static object GetQueryFilter(this IChronologicalEventList chronologicalEventList)
    {
    return (object) chronologicalEventList.GetDynamicProperty("QueryFilter");
    }

    public static void SetFileName(this IChronologicalEventList chronologicalEventList, string fileName)
    {
      chronologicalEventList.SetDynamicProperty("FileName",fileName);
    }

    public static string GetFileName(this IChronologicalEventList chronologicalEventList)
    {
    return (string) chronologicalEventList.GetDynamicProperty("FileName");
    }

    public static void SetVarFilter(this IChronologicalEventList chronologicalEventList, string varFilter)
    {
      chronologicalEventList.SetDynamicProperty("VarFilter",varFilter);
    }

    public static string GetVarFilter(this IChronologicalEventList chronologicalEventList)
    {
    return (string) chronologicalEventList.GetDynamicProperty("VarFilter");
    }

    public static void SetFilterTitel(this IChronologicalEventList chronologicalEventList, string filterTitel)
    {
      chronologicalEventList.SetDynamicProperty("FilterTitel",filterTitel);
    }

    public static string GetFilterTitel(this IChronologicalEventList chronologicalEventList)
    {
    return (string) chronologicalEventList.GetDynamicProperty("FilterTitel");
    }

    public static void SetIsFilterRT(this IChronologicalEventList chronologicalEventList, bool isFilterRT)
    {
      chronologicalEventList.SetDynamicProperty("IsFilterRT",isFilterRT);
    }

    public static bool GetIsFilterRT(this IChronologicalEventList chronologicalEventList)
    {
    return (bool) chronologicalEventList.GetDynamicProperty("IsFilterRT");
    }

    public static void SetIsMatchCase(this IChronologicalEventList chronologicalEventList, bool isMatchCase)
    {
      chronologicalEventList.SetDynamicProperty("IsMatchCase",isMatchCase);
    }

    public static bool GetIsMatchCase(this IChronologicalEventList chronologicalEventList)
    {
    return (bool) chronologicalEventList.GetDynamicProperty("IsMatchCase");
    }

    public static void SetIsFromFiles(this IChronologicalEventList chronologicalEventList, bool isFromFiles)
    {
      chronologicalEventList.SetDynamicProperty("IsFromFiles",isFromFiles);
    }

    public static bool GetIsFromFiles(this IChronologicalEventList chronologicalEventList)
    {
    return (bool) chronologicalEventList.GetDynamicProperty("IsFromFiles");
    }

    public static void SetIsReadAll(this IChronologicalEventList chronologicalEventList, bool isReadAll)
    {
      chronologicalEventList.SetDynamicProperty("IsReadAll",isReadAll);
    }

    public static bool GetIsReadAll(this IChronologicalEventList chronologicalEventList)
    {
    return (bool) chronologicalEventList.GetDynamicProperty("IsReadAll");
    }

    public static void SetIsAutoName(this IChronologicalEventList chronologicalEventList, bool isAutoName)
    {
      chronologicalEventList.SetDynamicProperty("IsAutoName",isAutoName);
    }

    public static bool GetIsAutoName(this IChronologicalEventList chronologicalEventList)
    {
    return (bool) chronologicalEventList.GetDynamicProperty("IsAutoName");
    }

    public static void SetIsAML(this IChronologicalEventList chronologicalEventList, bool isAML)
    {
      chronologicalEventList.SetDynamicProperty("IsAML",isAML);
    }

    public static bool GetIsAML(this IChronologicalEventList chronologicalEventList)
    {
    return (bool) chronologicalEventList.GetDynamicProperty("IsAML");
    }

    public static void SetIsDBASE(this IChronologicalEventList chronologicalEventList, bool isDBASE)
    {
      chronologicalEventList.SetDynamicProperty("IsDBASE",isDBASE);
    }

    public static bool GetIsDBASE(this IChronologicalEventList chronologicalEventList)
    {
    return (bool) chronologicalEventList.GetDynamicProperty("IsDBASE");
    }

    public static void SetIsXML(this IChronologicalEventList chronologicalEventList, bool isXML)
    {
      chronologicalEventList.SetDynamicProperty("IsXML",isXML);
    }

    public static bool GetIsXML(this IChronologicalEventList chronologicalEventList)
    {
    return (bool) chronologicalEventList.GetDynamicProperty("IsXML");
    }

    public static void SetIsRelationTime(this IChronologicalEventList chronologicalEventList, bool isRelationTime)
    {
      chronologicalEventList.SetDynamicProperty("IsRelationTime",isRelationTime);
    }

    public static bool GetIsRelationTime(this IChronologicalEventList chronologicalEventList)
    {
    return (bool) chronologicalEventList.GetDynamicProperty("IsRelationTime");
    }

    public static void SetIsUnicode(this IChronologicalEventList chronologicalEventList, bool isUnicode)
    {
      chronologicalEventList.SetDynamicProperty("IsUnicode",isUnicode);
    }

    public static bool GetIsUnicode(this IChronologicalEventList chronologicalEventList)
    {
    return (bool) chronologicalEventList.GetDynamicProperty("IsUnicode");
    }

    public static void SetIsIncremental(this IChronologicalEventList chronologicalEventList, bool isIncremental)
    {
      chronologicalEventList.SetDynamicProperty("IsIncremental",isIncremental);
    }

    public static bool GetIsIncremental(this IChronologicalEventList chronologicalEventList)
    {
    return (bool) chronologicalEventList.GetDynamicProperty("IsIncremental");
    }

    public static void SetIsFilterExp(this IChronologicalEventList chronologicalEventList, bool isFilterExp)
    {
      chronologicalEventList.SetDynamicProperty("IsFilterExp",isFilterExp);
    }

    public static bool GetIsFilterExp(this IChronologicalEventList chronologicalEventList)
    {
    return (bool) chronologicalEventList.GetDynamicProperty("IsFilterExp");
    }

    public static void SetIsAcknowledged(this IChronologicalEventList chronologicalEventList, bool isAcknowledged)
    {
      chronologicalEventList.SetDynamicProperty("IsAcknowledged",isAcknowledged);
    }

    public static bool GetIsAcknowledged(this IChronologicalEventList chronologicalEventList)
    {
    return (bool) chronologicalEventList.GetDynamicProperty("IsAcknowledged");
    }

    public static void SetIsAscentOnly(this IChronologicalEventList chronologicalEventList, bool isAscentOnly)
    {
      chronologicalEventList.SetDynamicProperty("IsAscentOnly",isAscentOnly);
    }

    public static bool GetIsAscentOnly(this IChronologicalEventList chronologicalEventList)
    {
    return (bool) chronologicalEventList.GetDynamicProperty("IsAscentOnly");
    }

    public static void SetEntriesCount(this IChronologicalEventList chronologicalEventList, ushort entriesCount)
    {
      chronologicalEventList.SetDynamicProperty("EntriesCount",entriesCount);
    }

    public static ushort GetEntriesCount(this IChronologicalEventList chronologicalEventList)
    {
    return (ushort) chronologicalEventList.GetDynamicProperty("EntriesCount");
    }

    public static void SetFont(this IChronologicalEventList chronologicalEventList, ushort font)
    {
      chronologicalEventList.SetDynamicProperty("Font",font);
    }

    public static ushort GetFont(this IChronologicalEventList chronologicalEventList)
    {
    return (ushort) chronologicalEventList.GetDynamicProperty("Font");
    }

    public static void SetClasses(this IChronologicalEventList chronologicalEventList, string classes)
    {
      chronologicalEventList.SetDynamicProperty("Classes",classes);
    }

    public static string GetClasses(this IChronologicalEventList chronologicalEventList)
    {
    return (string) chronologicalEventList.GetDynamicProperty("Classes");
    }

    public static void SetGroups(this IChronologicalEventList chronologicalEventList, string groups)
    {
      chronologicalEventList.SetDynamicProperty("Groups",groups);
    }

    public static string GetGroups(this IChronologicalEventList chronologicalEventList)
    {
    return (string) chronologicalEventList.GetDynamicProperty("Groups");
    }

    public static void SetResString(this IChronologicalEventList chronologicalEventList, string resString)
    {
      chronologicalEventList.SetDynamicProperty("ResString",resString);
    }

    public static string GetResString(this IChronologicalEventList chronologicalEventList)
    {
    return (string) chronologicalEventList.GetDynamicProperty("ResString");
    }

    public static void SetIncTime(this IChronologicalEventList chronologicalEventList, uint incTime)
    {
      chronologicalEventList.SetDynamicProperty("IncTime",incTime);
    }

    public static uint GetIncTime(this IChronologicalEventList chronologicalEventList)
    {
    return (uint) chronologicalEventList.GetDynamicProperty("IncTime");
    }

    public static void SetmSeconds(this IChronologicalEventList chronologicalEventList, ushort mSeconds)
    {
      chronologicalEventList.SetDynamicProperty("mSeconds",mSeconds);
    }

    public static ushort GetmSeconds(this IChronologicalEventList chronologicalEventList)
    {
    return (ushort) chronologicalEventList.GetDynamicProperty("mSeconds");
    }

    public static void SetTimeFilter(this IChronologicalEventList chronologicalEventList, object timeFilter)
    {
      chronologicalEventList.SetDynamicProperty("TimeFilter",timeFilter);
    }

    public static object GetTimeFilter(this IChronologicalEventList chronologicalEventList)
    {
    return (object) chronologicalEventList.GetDynamicProperty("TimeFilter");
    }

    public static void SetListInfo(this IChronologicalEventList chronologicalEventList, object listInfo)
    {
      chronologicalEventList.SetDynamicProperty("ListInfo",listInfo);
    }

    public static object GetListInfo(this IChronologicalEventList chronologicalEventList)
    {
    return (object) chronologicalEventList.GetDynamicProperty("ListInfo");
    }

    public static void SetProjectNames(this IChronologicalEventList chronologicalEventList, string projectNames)
    {
      chronologicalEventList.SetDynamicProperty("ProjectNames",projectNames);
    }

    public static string GetProjectNames(this IChronologicalEventList chronologicalEventList)
    {
    return (string) chronologicalEventList.GetDynamicProperty("ProjectNames");
    }

    public static void SetTextFilter(this IChronologicalEventList chronologicalEventList, object textFilter)
    {
      chronologicalEventList.SetDynamicProperty("TextFilter",textFilter);
    }

    public static object GetTextFilter(this IChronologicalEventList chronologicalEventList)
    {
    return (object) chronologicalEventList.GetDynamicProperty("TextFilter");
    }

    public static void SetStatusFilter(this IChronologicalEventList chronologicalEventList, object statusFilter)
    {
      chronologicalEventList.SetDynamicProperty("StatusFilter",statusFilter);
    }

    public static object GetStatusFilter(this IChronologicalEventList chronologicalEventList)
    {
    return (object) chronologicalEventList.GetDynamicProperty("StatusFilter");
    }

    public static void SetIsSQL(this IChronologicalEventList chronologicalEventList, bool isSQL)
    {
      chronologicalEventList.SetDynamicProperty("IsSQL",isSQL);
    }

    public static bool GetIsSQL(this IChronologicalEventList chronologicalEventList)
    {
    return (bool) chronologicalEventList.GetDynamicProperty("IsSQL");
    }

    public static void SetSQLBase(this IChronologicalEventList chronologicalEventList, string sQLBase)
    {
      chronologicalEventList.SetDynamicProperty("SQLBase",sQLBase);
    }

    public static string GetSQLBase(this IChronologicalEventList chronologicalEventList)
    {
    return (string) chronologicalEventList.GetDynamicProperty("SQLBase");
    }

    public static void SetSQLTable(this IChronologicalEventList chronologicalEventList, string sQLTable)
    {
      chronologicalEventList.SetDynamicProperty("SQLTable",sQLTable);
    }

    public static string GetSQLTable(this IChronologicalEventList chronologicalEventList)
    {
    return (string) chronologicalEventList.GetDynamicProperty("SQLTable");
    }

    public static void SetSystemModelGroup(this IChronologicalEventList chronologicalEventList, object systemModelGroup)
    {
      chronologicalEventList.SetDynamicProperty("SystemModelGroup",systemModelGroup);
    }

    public static object GetSystemModelGroup(this IChronologicalEventList chronologicalEventList)
    {
    return (object) chronologicalEventList.GetDynamicProperty("SystemModelGroup");
    }

    public static void SetRTMDIFilterScreen(this IChronologicalEventList chronologicalEventList, object rTMDIFilterScreen)
    {
      chronologicalEventList.SetDynamicProperty("RTMDIFilterScreen",rTMDIFilterScreen);
    }

    public static object GetRTMDIFilterScreen(this IChronologicalEventList chronologicalEventList)
    {
    return (object) chronologicalEventList.GetDynamicProperty("RTMDIFilterScreen");
    }

    public static void SetAreas(this IChronologicalEventList chronologicalEventList, string areas)
    {
      chronologicalEventList.SetDynamicProperty("Areas",areas);
    }

    public static string GetAreas(this IChronologicalEventList chronologicalEventList)
    {
    return (string) chronologicalEventList.GetDynamicProperty("Areas");
    }

    public static void SetIsGoneOnly(this IChronologicalEventList chronologicalEventList, bool isGoneOnly)
    {
      chronologicalEventList.SetDynamicProperty("IsGoneOnly",isGoneOnly);
    }

    public static bool GetIsGoneOnly(this IChronologicalEventList chronologicalEventList)
    {
    return (bool) chronologicalEventList.GetDynamicProperty("IsGoneOnly");
    }

    public static void SetNeedComment(this IChronologicalEventList chronologicalEventList, bool needComment)
    {
      chronologicalEventList.SetDynamicProperty("NeedComment",needComment);
    }

    public static bool GetNeedComment(this IChronologicalEventList chronologicalEventList)
    {
    return (bool) chronologicalEventList.GetDynamicProperty("NeedComment");
    }

    public static void SetNeedAlarmCause(this IChronologicalEventList chronologicalEventList, bool needAlarmCause)
    {
      chronologicalEventList.SetDynamicProperty("NeedAlarmCause",needAlarmCause);
    }

    public static bool GetNeedAlarmCause(this IChronologicalEventList chronologicalEventList)
    {
    return (bool) chronologicalEventList.GetDynamicProperty("NeedAlarmCause");
    }

    public static void SetCategoryFilter(this IChronologicalEventList chronologicalEventList, object categoryFilter)
    {
      chronologicalEventList.SetDynamicProperty("CategoryFilter",categoryFilter);
    }

    public static object GetCategoryFilter(this IChronologicalEventList chronologicalEventList)
    {
    return (object) chronologicalEventList.GetDynamicProperty("CategoryFilter");
    }

    public static void SetHideInactiveAlarmGroups(this IChronologicalEventList chronologicalEventList, bool hideInactiveAlarmGroups)
    {
      chronologicalEventList.SetDynamicProperty("HideInactiveAlarmGroups",hideInactiveAlarmGroups);
    }

    public static bool GetHideInactiveAlarmGroups(this IChronologicalEventList chronologicalEventList)
    {
    return (bool) chronologicalEventList.GetDynamicProperty("HideInactiveAlarmGroups");
    }

    public static void SetHideInactiveAlarmClasses(this IChronologicalEventList chronologicalEventList, bool hideInactiveAlarmClasses)
    {
      chronologicalEventList.SetDynamicProperty("HideInactiveAlarmClasses",hideInactiveAlarmClasses);
    }

    public static bool GetHideInactiveAlarmClasses(this IChronologicalEventList chronologicalEventList)
    {
    return (bool) chronologicalEventList.GetDynamicProperty("HideInactiveAlarmClasses");
    }

    public static void SetUseExportLanguage(this IChronologicalEventList chronologicalEventList, bool useExportLanguage)
    {
      chronologicalEventList.SetDynamicProperty("UseExportLanguage",useExportLanguage);
    }

    public static bool GetUseExportLanguage(this IChronologicalEventList chronologicalEventList)
    {
    return (bool) chronologicalEventList.GetDynamicProperty("UseExportLanguage");
    }

    public static void SetShowSysEntriesForever(this IChronologicalEventList chronologicalEventList, bool showSysEntriesForever)
    {
      chronologicalEventList.SetDynamicProperty("ShowSysEntriesForever",showSysEntriesForever);
    }

    public static bool GetShowSysEntriesForever(this IChronologicalEventList chronologicalEventList)
    {
    return (bool) chronologicalEventList.GetDynamicProperty("ShowSysEntriesForever");
    }

    public static void SetFilterPartGUID(this IChronologicalEventList chronologicalEventList, System.Guid filterPartGUID)
    {
      chronologicalEventList.SetDynamicProperty("FilterPartGUID",filterPartGUID);
    }

    public static System.Guid GetFilterPartGUID(this IChronologicalEventList chronologicalEventList)
    {
    return (System.Guid) chronologicalEventList.GetDynamicProperty("FilterPartGUID");
    }

    public static void SetEditableInRT(this IChronologicalEventList chronologicalEventList, bool editableInRT)
    {
      chronologicalEventList.SetDynamicProperty("EditableInRT",editableInRT);
    }

    public static bool GetEditableInRT(this IChronologicalEventList chronologicalEventList)
    {
    return (bool) chronologicalEventList.GetDynamicProperty("EditableInRT");
    }

    public static void SetARVTime1(this IChronologicalEventList chronologicalEventList, uint aRVTime1)
    {
      chronologicalEventList.SetDynamicProperty("ARVTime1",aRVTime1);
    }

    public static uint GetARVTime1(this IChronologicalEventList chronologicalEventList)
    {
    return (uint) chronologicalEventList.GetDynamicProperty("ARVTime1");
    }

    public static void SetARVTime2(this IChronologicalEventList chronologicalEventList, uint aRVTime2)
    {
      chronologicalEventList.SetDynamicProperty("ARVTime2",aRVTime2);
    }

    public static uint GetARVTime2(this IChronologicalEventList chronologicalEventList)
    {
    return (uint) chronologicalEventList.GetDynamicProperty("ARVTime2");
    }

    public static void SetOptions(this IChronologicalEventList chronologicalEventList, ushort options)
    {
      chronologicalEventList.SetDynamicProperty("Options",options);
    }

    public static ushort GetOptions(this IChronologicalEventList chronologicalEventList)
    {
    return (ushort) chronologicalEventList.GetDynamicProperty("Options");
    }

    public static void SetBoxType(this IChronologicalEventList chronologicalEventList, ushort boxType)
    {
      chronologicalEventList.SetDynamicProperty("BoxType",boxType);
    }

    public static ushort GetBoxType(this IChronologicalEventList chronologicalEventList)
    {
    return (ushort) chronologicalEventList.GetDynamicProperty("BoxType");
    }

    public static void SetTimeFormat(this IChronologicalEventList chronologicalEventList, ushort timeFormat)
    {
      chronologicalEventList.SetDynamicProperty("TimeFormat",timeFormat);
    }

    public static ushort GetTimeFormat(this IChronologicalEventList chronologicalEventList)
    {
    return (ushort) chronologicalEventList.GetDynamicProperty("TimeFormat");
    }

    public static void SetAddLen(this IChronologicalEventList chronologicalEventList, ushort addLen)
    {
      chronologicalEventList.SetDynamicProperty("AddLen",addLen);
    }

    public static ushort GetAddLen(this IChronologicalEventList chronologicalEventList)
    {
    return (ushort) chronologicalEventList.GetDynamicProperty("AddLen");
    }

    public static void SetLength(this IChronologicalEventList chronologicalEventList, uint length)
    {
      chronologicalEventList.SetDynamicProperty("Length",length);
    }

    public static uint GetLength(this IChronologicalEventList chronologicalEventList)
    {
    return (uint) chronologicalEventList.GetDynamicProperty("Length");
    }

    public static void SetOffset(this IChronologicalEventList chronologicalEventList, uint offset)
    {
      chronologicalEventList.SetDynamicProperty("Offset",offset);
    }

    public static uint GetOffset(this IChronologicalEventList chronologicalEventList)
    {
    return (uint) chronologicalEventList.GetDynamicProperty("Offset");
    }

    public static void SetChargeFilter(this IChronologicalEventList chronologicalEventList, object chargeFilter)
    {
      chronologicalEventList.SetDynamicProperty("ChargeFilter",chargeFilter);
    }

    public static object GetChargeFilter(this IChronologicalEventList chronologicalEventList)
    {
    return (object) chronologicalEventList.GetDynamicProperty("ChargeFilter");
    }

    public static void SetShiftFilter(this IChronologicalEventList chronologicalEventList, object shiftFilter)
    {
      chronologicalEventList.SetDynamicProperty("ShiftFilter",shiftFilter);
    }

    public static object GetShiftFilter(this IChronologicalEventList chronologicalEventList)
    {
    return (object) chronologicalEventList.GetDynamicProperty("ShiftFilter");
    }

    public static void SetModifyTimePeriod(this IChronologicalEventList chronologicalEventList, bool modifyTimePeriod)
    {
      chronologicalEventList.SetDynamicProperty("ModifyTimePeriod",modifyTimePeriod);
    }

    public static bool GetModifyTimePeriod(this IChronologicalEventList chronologicalEventList)
    {
    return (bool) chronologicalEventList.GetDynamicProperty("ModifyTimePeriod");
    }

    public static void SetBoxenType(this IChronologicalEventList chronologicalEventList, ushort boxenType)
    {
      chronologicalEventList.SetDynamicProperty("BoxenType",boxenType);
    }

    public static ushort GetBoxenType(this IChronologicalEventList chronologicalEventList)
    {
    return (ushort) chronologicalEventList.GetDynamicProperty("BoxenType");
    }

    public static void SetFilterActive(this IChronologicalEventList chronologicalEventList, byte filterActive)
    {
      chronologicalEventList.SetDynamicProperty("FilterActive",filterActive);
    }

    public static byte GetFilterActive(this IChronologicalEventList chronologicalEventList)
    {
    return (byte) chronologicalEventList.GetDynamicProperty("FilterActive");
    }

    public static void SetArchive(this IChronologicalEventList chronologicalEventList, string archive)
    {
      chronologicalEventList.SetDynamicProperty("Archive",archive);
    }

    public static string GetArchive(this IChronologicalEventList chronologicalEventList)
    {
    return (string) chronologicalEventList.GetDynamicProperty("Archive");
    }

    public static void SetName(this IChronologicalEventList chronologicalEventList, string name)
    {
      chronologicalEventList.SetDynamicProperty("Name",name);
    }

    public static string GetName(this IChronologicalEventList chronologicalEventList)
    {
    return (string) chronologicalEventList.GetDynamicProperty("Name");
    }

    public static void SetLastCharge(this IChronologicalEventList chronologicalEventList, byte lastCharge)
    {
      chronologicalEventList.SetDynamicProperty("LastCharge",lastCharge);
    }

    public static byte GetLastCharge(this IChronologicalEventList chronologicalEventList)
    {
    return (byte) chronologicalEventList.GetDynamicProperty("LastCharge");
    }

    public static void SetCount(this IChronologicalEventList chronologicalEventList, uint count)
    {
      chronologicalEventList.SetDynamicProperty("Count",count);
    }

    public static uint GetCount(this IChronologicalEventList chronologicalEventList)
    {
    return (uint) chronologicalEventList.GetDynamicProperty("Count");
    }

    public static void SetTimeLimits(this IChronologicalEventList chronologicalEventList, ushort timeLimits)
    {
      chronologicalEventList.SetDynamicProperty("TimeLimits",timeLimits);
    }

    public static ushort GetTimeLimits(this IChronologicalEventList chronologicalEventList)
    {
    return (ushort) chronologicalEventList.GetDynamicProperty("TimeLimits");
    }

    public static void SetArvLotList(this IChronologicalEventList chronologicalEventList, string arvLotList)
    {
      chronologicalEventList.SetDynamicProperty("ArvLotList",arvLotList);
    }

    public static string GetArvLotList(this IChronologicalEventList chronologicalEventList)
    {
    return (string) chronologicalEventList.GetDynamicProperty("ArvLotList");
    }

    public static void SetChargeRelative(this IChronologicalEventList chronologicalEventList, bool chargeRelative)
    {
      chronologicalEventList.SetDynamicProperty("ChargeRelative",chargeRelative);
    }

    public static bool GetChargeRelative(this IChronologicalEventList chronologicalEventList)
    {
    return (bool) chronologicalEventList.GetDynamicProperty("ChargeRelative");
    }

    public static void SetChargenNameFilterType(this IChronologicalEventList chronologicalEventList, ushort chargenNameFilterType)
    {
      chronologicalEventList.SetDynamicProperty("ChargenNameFilterType",chargenNameFilterType);
    }

    public static ushort GetChargenNameFilterType(this IChronologicalEventList chronologicalEventList)
    {
    return (ushort) chronologicalEventList.GetDynamicProperty("ChargenNameFilterType");
    }

    public static void SetChargenNameFilterVar(this IChronologicalEventList chronologicalEventList, object chargenNameFilterVar)
    {
      chronologicalEventList.SetDynamicProperty("ChargenNameFilterVar",chargenNameFilterVar);
    }

    public static object GetChargenNameFilterVar(this IChronologicalEventList chronologicalEventList)
    {
    return (object) chronologicalEventList.GetDynamicProperty("ChargenNameFilterVar");
    }

    public static void SetArchiveNameFilterType(this IChronologicalEventList chronologicalEventList, ushort archiveNameFilterType)
    {
      chronologicalEventList.SetDynamicProperty("ArchiveNameFilterType",archiveNameFilterType);
    }

    public static ushort GetArchiveNameFilterType(this IChronologicalEventList chronologicalEventList)
    {
    return (ushort) chronologicalEventList.GetDynamicProperty("ArchiveNameFilterType");
    }

    public static void SetArchiveNameFilterVar(this IChronologicalEventList chronologicalEventList, object archiveNameFilterVar)
    {
      chronologicalEventList.SetDynamicProperty("ArchiveNameFilterVar",archiveNameFilterVar);
    }

    public static object GetArchiveNameFilterVar(this IChronologicalEventList chronologicalEventList)
    {
    return (object) chronologicalEventList.GetDynamicProperty("ArchiveNameFilterVar");
    }

    public static void SetArchiveName(this IChronologicalEventList chronologicalEventList, string archiveName)
    {
      chronologicalEventList.SetDynamicProperty("ArchiveName",archiveName);
    }

    public static string GetArchiveName(this IChronologicalEventList chronologicalEventList)
    {
    return (string) chronologicalEventList.GetDynamicProperty("ArchiveName");
    }

    public static void SetLotName(this IChronologicalEventList chronologicalEventList, string lotName)
    {
      chronologicalEventList.SetDynamicProperty("LotName",lotName);
    }

    public static string GetLotName(this IChronologicalEventList chronologicalEventList)
    {
    return (string) chronologicalEventList.GetDynamicProperty("LotName");
    }

    public static void SetTimeFilterType(this IChronologicalEventList chronologicalEventList, byte timeFilterType)
    {
      chronologicalEventList.SetDynamicProperty("TimeFilterType",timeFilterType);
    }

    public static byte GetTimeFilterType(this IChronologicalEventList chronologicalEventList)
    {
    return (byte) chronologicalEventList.GetDynamicProperty("TimeFilterType");
    }

    public static void SetDoneLots(this IChronologicalEventList chronologicalEventList, bool doneLots)
    {
      chronologicalEventList.SetDynamicProperty("DoneLots",doneLots);
    }

    public static bool GetDoneLots(this IChronologicalEventList chronologicalEventList)
    {
    return (bool) chronologicalEventList.GetDynamicProperty("DoneLots");
    }

    public static void SetOpenLots(this IChronologicalEventList chronologicalEventList, bool openLots)
    {
      chronologicalEventList.SetDynamicProperty("OpenLots",openLots);
    }

    public static bool GetOpenLots(this IChronologicalEventList chronologicalEventList)
    {
    return (bool) chronologicalEventList.GetDynamicProperty("OpenLots");
    }

    public static void SetState(this IChronologicalEventList chronologicalEventList, byte state)
    {
      chronologicalEventList.SetDynamicProperty("State",state);
    }

    public static byte GetState(this IChronologicalEventList chronologicalEventList)
    {
    return (byte) chronologicalEventList.GetDynamicProperty("State");
    }

    public static void SetChargeScreen(this IChronologicalEventList chronologicalEventList, string chargeScreen)
    {
      chronologicalEventList.SetDynamicProperty("ChargeScreen",chargeScreen);
    }

    public static string GetChargeScreen(this IChronologicalEventList chronologicalEventList)
    {
    return (string) chronologicalEventList.GetDynamicProperty("ChargeScreen");
    }

    public static void SetRelatedPicture(this IChronologicalEventList chronologicalEventList, string relatedPicture)
    {
      chronologicalEventList.SetDynamicProperty("RelatedPicture",relatedPicture);
    }

    public static string GetRelatedPicture(this IChronologicalEventList chronologicalEventList)
    {
    return (string) chronologicalEventList.GetDynamicProperty("RelatedPicture");
    }

    public static void SetParentOfRelatedPicture(this IChronologicalEventList chronologicalEventList, string parentOfRelatedPicture)
    {
      chronologicalEventList.SetDynamicProperty("ParentOfRelatedPicture",parentOfRelatedPicture);
    }

    public static string GetParentOfRelatedPicture(this IChronologicalEventList chronologicalEventList)
    {
    return (string) chronologicalEventList.GetDynamicProperty("ParentOfRelatedPicture");
    }

    public static void SetPictureContainerName(this IChronologicalEventList chronologicalEventList, string pictureContainerName)
    {
      chronologicalEventList.SetDynamicProperty("PictureContainerName",pictureContainerName);
    }

    public static string GetPictureContainerName(this IChronologicalEventList chronologicalEventList)
    {
    return (string) chronologicalEventList.GetDynamicProperty("PictureContainerName");
    }

    public static void SetFilterMode(this IChronologicalEventList chronologicalEventList, byte filterMode)
    {
      chronologicalEventList.SetDynamicProperty("FilterMode",filterMode);
    }

    public static byte GetFilterMode(this IChronologicalEventList chronologicalEventList)
    {
    return (byte) chronologicalEventList.GetDynamicProperty("FilterMode");
    }

    public static void SetIncludeShiftsWithoutEquipmentModel(this IChronologicalEventList chronologicalEventList, bool includeShiftsWithoutEquipmentModel)
    {
      chronologicalEventList.SetDynamicProperty("IncludeShiftsWithoutEquipmentModel",includeShiftsWithoutEquipmentModel);
    }

    public static bool GetIncludeShiftsWithoutEquipmentModel(this IChronologicalEventList chronologicalEventList)
    {
    return (bool) chronologicalEventList.GetDynamicProperty("IncludeShiftsWithoutEquipmentModel");
    }

    public static void SetNameFilterMode(this IChronologicalEventList chronologicalEventList, byte nameFilterMode)
    {
      chronologicalEventList.SetDynamicProperty("NameFilterMode",nameFilterMode);
    }

    public static byte GetNameFilterMode(this IChronologicalEventList chronologicalEventList)
    {
    return (byte) chronologicalEventList.GetDynamicProperty("NameFilterMode");
    }

    public static void SetNameFilterText(this IChronologicalEventList chronologicalEventList, string nameFilterText)
    {
      chronologicalEventList.SetDynamicProperty("NameFilterText",nameFilterText);
    }

    public static string GetNameFilterText(this IChronologicalEventList chronologicalEventList)
    {
    return (string) chronologicalEventList.GetDynamicProperty("NameFilterText");
    }

    public static void SetNameFilterIsCaseSensitive(this IChronologicalEventList chronologicalEventList, bool nameFilterIsCaseSensitive)
    {
      chronologicalEventList.SetDynamicProperty("NameFilterIsCaseSensitive",nameFilterIsCaseSensitive);
    }

    public static bool GetNameFilterIsCaseSensitive(this IChronologicalEventList chronologicalEventList)
    {
    return (bool) chronologicalEventList.GetDynamicProperty("NameFilterIsCaseSensitive");
    }

    public static void SetShiftNameFilterVar(this IChronologicalEventList chronologicalEventList, object shiftNameFilterVar)
    {
      chronologicalEventList.SetDynamicProperty("ShiftNameFilterVar",shiftNameFilterVar);
    }

    public static object GetShiftNameFilterVar(this IChronologicalEventList chronologicalEventList)
    {
    return (object) chronologicalEventList.GetDynamicProperty("ShiftNameFilterVar");
    }

    public static void SetShiftSelectionMode(this IChronologicalEventList chronologicalEventList, byte shiftSelectionMode)
    {
      chronologicalEventList.SetDynamicProperty("ShiftSelectionMode",shiftSelectionMode);
    }

    public static byte GetShiftSelectionMode(this IChronologicalEventList chronologicalEventList)
    {
    return (byte) chronologicalEventList.GetDynamicProperty("ShiftSelectionMode");
    }

    public static void SetTimeLimitsMode(this IChronologicalEventList chronologicalEventList, byte timeLimitsMode)
    {
      chronologicalEventList.SetDynamicProperty("TimeLimitsMode",timeLimitsMode);
    }

    public static byte GetTimeLimitsMode(this IChronologicalEventList chronologicalEventList)
    {
    return (byte) chronologicalEventList.GetDynamicProperty("TimeLimitsMode");
    }

    public static void SetChangeFromDirectlyToPredefinedMode(this IChronologicalEventList chronologicalEventList, bool changeFromDirectlyToPredefinedMode)
    {
      chronologicalEventList.SetDynamicProperty("ChangeFromDirectlyToPredefinedMode",changeFromDirectlyToPredefinedMode);
    }

    public static bool GetChangeFromDirectlyToPredefinedMode(this IChronologicalEventList chronologicalEventList)
    {
    return (bool) chronologicalEventList.GetDynamicProperty("ChangeFromDirectlyToPredefinedMode");
    }

    public static void SetHierarchic(this IChronologicalEventList chronologicalEventList, bool hierarchic)
    {
      chronologicalEventList.SetDynamicProperty("Hierarchic",hierarchic);
    }

    public static bool GetHierarchic(this IChronologicalEventList chronologicalEventList)
    {
    return (bool) chronologicalEventList.GetDynamicProperty("Hierarchic");
    }

    public static void SetVarCount(this IChronologicalEventList chronologicalEventList, short varCount)
    {
      chronologicalEventList.SetDynamicProperty("VarCount",varCount);
    }

    public static short GetVarCount(this IChronologicalEventList chronologicalEventList)
    {
    return (short) chronologicalEventList.GetDynamicProperty("VarCount");
    }

    public static void SetTagCount(this IChronologicalEventList chronologicalEventList, short tagCount)
    {
      chronologicalEventList.SetDynamicProperty("TagCount",tagCount);
    }

    public static short GetTagCount(this IChronologicalEventList chronologicalEventList)
    {
    return (short) chronologicalEventList.GetDynamicProperty("TagCount");
    }

    public static void SetAlarmCount(this IChronologicalEventList chronologicalEventList, short alarmCount)
    {
      chronologicalEventList.SetDynamicProperty("AlarmCount",alarmCount);
    }

    public static short GetAlarmCount(this IChronologicalEventList chronologicalEventList)
    {
    return (short) chronologicalEventList.GetDynamicProperty("AlarmCount");
    }

    public static void SetStatCount(this IChronologicalEventList chronologicalEventList, short statCount)
    {
      chronologicalEventList.SetDynamicProperty("StatCount",statCount);
    }

    public static short GetStatCount(this IChronologicalEventList chronologicalEventList)
    {
    return (short) chronologicalEventList.GetDynamicProperty("StatCount");
    }

    public static void SetValCount(this IChronologicalEventList chronologicalEventList, short valCount)
    {
      chronologicalEventList.SetDynamicProperty("ValCount",valCount);
    }

    public static short GetValCount(this IChronologicalEventList chronologicalEventList)
    {
    return (short) chronologicalEventList.GetDynamicProperty("ValCount");
    }

    public static void SetUserCount(this IChronologicalEventList chronologicalEventList, short userCount)
    {
      chronologicalEventList.SetDynamicProperty("UserCount",userCount);
    }

    public static short GetUserCount(this IChronologicalEventList chronologicalEventList)
    {
    return (short) chronologicalEventList.GetDynamicProperty("UserCount");
    }

    public static void SetUserNameCount(this IChronologicalEventList chronologicalEventList, short userNameCount)
    {
      chronologicalEventList.SetDynamicProperty("UserNameCount",userNameCount);
    }

    public static short GetUserNameCount(this IChronologicalEventList chronologicalEventList)
    {
    return (short) chronologicalEventList.GetDynamicProperty("UserNameCount");
    }

    public static void SetCompCount(this IChronologicalEventList chronologicalEventList, short compCount)
    {
      chronologicalEventList.SetDynamicProperty("CompCount",compCount);
    }

    public static short GetCompCount(this IChronologicalEventList chronologicalEventList)
    {
    return (short) chronologicalEventList.GetDynamicProperty("CompCount");
    }

    public static void SetRTextCount(this IChronologicalEventList chronologicalEventList, short rTextCount)
    {
      chronologicalEventList.SetDynamicProperty("RTextCount",rTextCount);
    }

    public static short GetRTextCount(this IChronologicalEventList chronologicalEventList)
    {
    return (short) chronologicalEventList.GetDynamicProperty("RTextCount");
    }

    public static void SetProjectCount(this IChronologicalEventList chronologicalEventList, short projectCount)
    {
      chronologicalEventList.SetDynamicProperty("ProjectCount",projectCount);
    }

    public static short GetProjectCount(this IChronologicalEventList chronologicalEventList)
    {
    return (short) chronologicalEventList.GetDynamicProperty("ProjectCount");
    }

    public static void SetClassCount(this IChronologicalEventList chronologicalEventList, short classCount)
    {
      chronologicalEventList.SetDynamicProperty("ClassCount",classCount);
    }

    public static short GetClassCount(this IChronologicalEventList chronologicalEventList)
    {
    return (short) chronologicalEventList.GetDynamicProperty("ClassCount");
    }

    public static void SetClassNrCount(this IChronologicalEventList chronologicalEventList, short classNrCount)
    {
      chronologicalEventList.SetDynamicProperty("ClassNrCount",classNrCount);
    }

    public static short GetClassNrCount(this IChronologicalEventList chronologicalEventList)
    {
    return (short) chronologicalEventList.GetDynamicProperty("ClassNrCount");
    }

    public static void SetGroupCount(this IChronologicalEventList chronologicalEventList, short groupCount)
    {
      chronologicalEventList.SetDynamicProperty("GroupCount",groupCount);
    }

    public static short GetGroupCount(this IChronologicalEventList chronologicalEventList)
    {
    return (short) chronologicalEventList.GetDynamicProperty("GroupCount");
    }

    public static void SetGroupNrCount(this IChronologicalEventList chronologicalEventList, short groupNrCount)
    {
      chronologicalEventList.SetDynamicProperty("GroupNrCount",groupNrCount);
    }

    public static short GetGroupNrCount(this IChronologicalEventList chronologicalEventList)
    {
    return (short) chronologicalEventList.GetDynamicProperty("GroupNrCount");
    }

    public static void SetEntry(this IChronologicalEventList chronologicalEventList, string entry)
    {
      chronologicalEventList.SetDynamicProperty("Entry",entry);
    }

    public static string GetEntry(this IChronologicalEventList chronologicalEventList)
    {
    return (string) chronologicalEventList.GetDynamicProperty("Entry");
    }

    public static void SetEntryAll(this IChronologicalEventList chronologicalEventList, string entryAll)
    {
      chronologicalEventList.SetDynamicProperty("EntryAll",entryAll);
    }

    public static string GetEntryAll(this IChronologicalEventList chronologicalEventList)
    {
    return (string) chronologicalEventList.GetDynamicProperty("EntryAll");
    }

    public static void SetTagNr(this IChronologicalEventList chronologicalEventList, string tagNr)
    {
      chronologicalEventList.SetDynamicProperty("TagNr",tagNr);
    }

    public static string GetTagNr(this IChronologicalEventList chronologicalEventList)
    {
    return (string) chronologicalEventList.GetDynamicProperty("TagNr");
    }

    public static void SetText(this IChronologicalEventList chronologicalEventList, string text)
    {
      chronologicalEventList.SetDynamicProperty("Text",text);
    }

    public static string GetText(this IChronologicalEventList chronologicalEventList)
    {
    return (string) chronologicalEventList.GetDynamicProperty("Text");
    }

    public static void SetComes(this IChronologicalEventList chronologicalEventList, string comes)
    {
      chronologicalEventList.SetDynamicProperty("Comes",comes);
    }

    public static string GetComes(this IChronologicalEventList chronologicalEventList)
    {
    return (string) chronologicalEventList.GetDynamicProperty("Comes");
    }

    public static void SetGoes(this IChronologicalEventList chronologicalEventList, string goes)
    {
      chronologicalEventList.SetDynamicProperty("Goes",goes);
    }

    public static string GetGoes(this IChronologicalEventList chronologicalEventList)
    {
    return (string) chronologicalEventList.GetDynamicProperty("Goes");
    }

    public static void SetAcknowledged(this IChronologicalEventList chronologicalEventList, string acknowledged)
    {
      chronologicalEventList.SetDynamicProperty("Acknowledged",acknowledged);
    }

    public static string GetAcknowledged(this IChronologicalEventList chronologicalEventList)
    {
    return (string) chronologicalEventList.GetDynamicProperty("Acknowledged");
    }

    public static void SetStop(this IChronologicalEventList chronologicalEventList, string stop)
    {
      chronologicalEventList.SetDynamicProperty("Stop",stop);
    }

    public static string GetStop(this IChronologicalEventList chronologicalEventList)
    {
    return (string) chronologicalEventList.GetDynamicProperty("Stop");
    }

    public static void SetStatus(this IChronologicalEventList chronologicalEventList, string status)
    {
      chronologicalEventList.SetDynamicProperty("Status",status);
    }

    public static string GetStatus(this IChronologicalEventList chronologicalEventList)
    {
    return (string) chronologicalEventList.GetDynamicProperty("Status");
    }

    public static void SetValue(this IChronologicalEventList chronologicalEventList, string value)
    {
      chronologicalEventList.SetDynamicProperty("Value",value);
    }

    public static string GetValue(this IChronologicalEventList chronologicalEventList)
    {
    return (string) chronologicalEventList.GetDynamicProperty("Value");
    }

    public static void SetUser(this IChronologicalEventList chronologicalEventList, string user)
    {
      chronologicalEventList.SetDynamicProperty("User",user);
    }

    public static string GetUser(this IChronologicalEventList chronologicalEventList)
    {
    return (string) chronologicalEventList.GetDynamicProperty("User");
    }

    public static void SetUserName(this IChronologicalEventList chronologicalEventList, string userName)
    {
      chronologicalEventList.SetDynamicProperty("UserName",userName);
    }

    public static string GetUserName(this IChronologicalEventList chronologicalEventList)
    {
    return (string) chronologicalEventList.GetDynamicProperty("UserName");
    }

    public static void SetComputer(this IChronologicalEventList chronologicalEventList, string computer)
    {
      chronologicalEventList.SetDynamicProperty("Computer",computer);
    }

    public static string GetComputer(this IChronologicalEventList chronologicalEventList)
    {
    return (string) chronologicalEventList.GetDynamicProperty("Computer");
    }

    public static void SetReaktTime(this IChronologicalEventList chronologicalEventList, string reaktTime)
    {
      chronologicalEventList.SetDynamicProperty("ReaktTime",reaktTime);
    }

    public static string GetReaktTime(this IChronologicalEventList chronologicalEventList)
    {
    return (string) chronologicalEventList.GetDynamicProperty("ReaktTime");
    }

    public static void SetReaktCount(this IChronologicalEventList chronologicalEventList, string reaktCount)
    {
      chronologicalEventList.SetDynamicProperty("ReaktCount",reaktCount);
    }

    public static string GetReaktCount(this IChronologicalEventList chronologicalEventList)
    {
    return (string) chronologicalEventList.GetDynamicProperty("ReaktCount");
    }

    public static void SetReaktStat(this IChronologicalEventList chronologicalEventList, string reaktStat)
    {
      chronologicalEventList.SetDynamicProperty("ReaktStat",reaktStat);
    }

    public static string GetReaktStat(this IChronologicalEventList chronologicalEventList)
    {
    return (string) chronologicalEventList.GetDynamicProperty("ReaktStat");
    }

    public static void SetAktText(this IChronologicalEventList chronologicalEventList, string aktText)
    {
      chronologicalEventList.SetDynamicProperty("AktText",aktText);
    }

    public static string GetAktText(this IChronologicalEventList chronologicalEventList)
    {
    return (string) chronologicalEventList.GetDynamicProperty("AktText");
    }

    public static void SetProject(this IChronologicalEventList chronologicalEventList, string project)
    {
      chronologicalEventList.SetDynamicProperty("Project",project);
    }

    public static string GetProject(this IChronologicalEventList chronologicalEventList)
    {
    return (string) chronologicalEventList.GetDynamicProperty("Project");
    }

    public static void SetClass(this IChronologicalEventList chronologicalEventList, string z_class)
    {
      chronologicalEventList.SetDynamicProperty("Class",z_class);
    }

    public static string GetClass(this IChronologicalEventList chronologicalEventList)
    {
    return (string) chronologicalEventList.GetDynamicProperty("Class");
    }

    public static void SetClassNr(this IChronologicalEventList chronologicalEventList, string classNr)
    {
      chronologicalEventList.SetDynamicProperty("ClassNr",classNr);
    }

    public static string GetClassNr(this IChronologicalEventList chronologicalEventList)
    {
    return (string) chronologicalEventList.GetDynamicProperty("ClassNr");
    }

    public static void SetGroup(this IChronologicalEventList chronologicalEventList, string group)
    {
      chronologicalEventList.SetDynamicProperty("Group",group);
    }

    public static string GetGroup(this IChronologicalEventList chronologicalEventList)
    {
    return (string) chronologicalEventList.GetDynamicProperty("Group");
    }

    public static void SetGroupNr(this IChronologicalEventList chronologicalEventList, string groupNr)
    {
      chronologicalEventList.SetDynamicProperty("GroupNr",groupNr);
    }

    public static string GetGroupNr(this IChronologicalEventList chronologicalEventList)
    {
    return (string) chronologicalEventList.GetDynamicProperty("GroupNr");
    }

    public static void SetIsDate(this IChronologicalEventList chronologicalEventList, bool isDate)
    {
      chronologicalEventList.SetDynamicProperty("IsDate",isDate);
    }

    public static bool GetIsDate(this IChronologicalEventList chronologicalEventList)
    {
    return (bool) chronologicalEventList.GetDynamicProperty("IsDate");
    }

    public static void SetIsTime(this IChronologicalEventList chronologicalEventList, bool isTime)
    {
      chronologicalEventList.SetDynamicProperty("IsTime",isTime);
    }

    public static bool GetIsTime(this IChronologicalEventList chronologicalEventList)
    {
    return (bool) chronologicalEventList.GetDynamicProperty("IsTime");
    }

    public static void SetIsMilliseconds(this IChronologicalEventList chronologicalEventList, bool isMilliseconds)
    {
      chronologicalEventList.SetDynamicProperty("IsMilliseconds",isMilliseconds);
    }

    public static bool GetIsMilliseconds(this IChronologicalEventList chronologicalEventList)
    {
    return (bool) chronologicalEventList.GetDynamicProperty("IsMilliseconds");
    }

    public static void SetIsDynLimitFile(this IChronologicalEventList chronologicalEventList, bool isDynLimitFile)
    {
      chronologicalEventList.SetDynamicProperty("IsDynLimitFile",isDynLimitFile);
    }

    public static bool GetIsDynLimitFile(this IChronologicalEventList chronologicalEventList)
    {
    return (bool) chronologicalEventList.GetDynamicProperty("IsDynLimitFile");
    }

    public static void SetIsMicroSeconds(this IChronologicalEventList chronologicalEventList, bool isMicroSeconds)
    {
      chronologicalEventList.SetDynamicProperty("IsMicroSeconds",isMicroSeconds);
    }

    public static bool GetIsMicroSeconds(this IChronologicalEventList chronologicalEventList)
    {
    return (bool) chronologicalEventList.GetDynamicProperty("IsMicroSeconds");
    }

    public static void SetShowGrid(this IChronologicalEventList chronologicalEventList, bool showGrid)
    {
      chronologicalEventList.SetDynamicProperty("ShowGrid",showGrid);
    }

    public static bool GetShowGrid(this IChronologicalEventList chronologicalEventList)
    {
    return (bool) chronologicalEventList.GetDynamicProperty("ShowGrid");
    }

    public static void SetUseOptionalColors(this IChronologicalEventList chronologicalEventList, bool useOptionalColors)
    {
      chronologicalEventList.SetDynamicProperty("UseOptionalColors",useOptionalColors);
    }

    public static bool GetUseOptionalColors(this IChronologicalEventList chronologicalEventList)
    {
    return (bool) chronologicalEventList.GetDynamicProperty("UseOptionalColors");
    }

    public static void SetStatusCaption(this IChronologicalEventList chronologicalEventList, string statusCaption)
    {
      chronologicalEventList.SetDynamicProperty("StatusCaption",statusCaption);
    }

    public static string GetStatusCaption(this IChronologicalEventList chronologicalEventList)
    {
    return (string) chronologicalEventList.GetDynamicProperty("StatusCaption");
    }

    public static void SetColor1(this IChronologicalEventList chronologicalEventList, uint color1)
    {
      chronologicalEventList.SetDynamicProperty("Color1",color1);
    }

    public static uint GetColor1(this IChronologicalEventList chronologicalEventList)
    {
    return (uint) chronologicalEventList.GetDynamicProperty("Color1");
    }

    public static void SetColor2(this IChronologicalEventList chronologicalEventList, uint color2)
    {
      chronologicalEventList.SetDynamicProperty("Color2",color2);
    }

    public static uint GetColor2(this IChronologicalEventList chronologicalEventList)
    {
    return (uint) chronologicalEventList.GetDynamicProperty("Color2");
    }

    public static void SetStatusCaptionNr(this IChronologicalEventList chronologicalEventList, short statusCaptionNr)
    {
      chronologicalEventList.SetDynamicProperty("StatusCaptionNr",statusCaptionNr);
    }

    public static short GetStatusCaptionNr(this IChronologicalEventList chronologicalEventList)
    {
    return (short) chronologicalEventList.GetDynamicProperty("StatusCaptionNr");
    }

    public static void SetSortDescending(this IChronologicalEventList chronologicalEventList, bool sortDescending)
    {
      chronologicalEventList.SetDynamicProperty("SortDescending",sortDescending);
    }

    public static bool GetSortDescending(this IChronologicalEventList chronologicalEventList)
    {
    return (bool) chronologicalEventList.GetDynamicProperty("SortDescending");
    }

    public static void SetComesAnz(this IChronologicalEventList chronologicalEventList, short comesAnz)
    {
      chronologicalEventList.SetDynamicProperty("ComesAnz",comesAnz);
    }

    public static short GetComesAnz(this IChronologicalEventList chronologicalEventList)
    {
    return (short) chronologicalEventList.GetDynamicProperty("ComesAnz");
    }

    public static void SetGoesAnz(this IChronologicalEventList chronologicalEventList, short goesAnz)
    {
      chronologicalEventList.SetDynamicProperty("GoesAnz",goesAnz);
    }

    public static short GetGoesAnz(this IChronologicalEventList chronologicalEventList)
    {
    return (short) chronologicalEventList.GetDynamicProperty("GoesAnz");
    }

    public static void SetQuitAnz(this IChronologicalEventList chronologicalEventList, short quitAnz)
    {
      chronologicalEventList.SetDynamicProperty("QuitAnz",quitAnz);
    }

    public static short GetQuitAnz(this IChronologicalEventList chronologicalEventList)
    {
    return (short) chronologicalEventList.GetDynamicProperty("QuitAnz");
    }

    public static void SetReactionTimeAnz(this IChronologicalEventList chronologicalEventList, short reactionTimeAnz)
    {
      chronologicalEventList.SetDynamicProperty("ReactionTimeAnz",reactionTimeAnz);
    }

    public static short GetReactionTimeAnz(this IChronologicalEventList chronologicalEventList)
    {
    return (short) chronologicalEventList.GetDynamicProperty("ReactionTimeAnz");
    }

    public static void SetReactionCountAnz(this IChronologicalEventList chronologicalEventList, short reactionCountAnz)
    {
      chronologicalEventList.SetDynamicProperty("ReactionCountAnz",reactionCountAnz);
    }

    public static short GetReactionCountAnz(this IChronologicalEventList chronologicalEventList)
    {
    return (short) chronologicalEventList.GetDynamicProperty("ReactionCountAnz");
    }

    public static void SetReactionStatAnz(this IChronologicalEventList chronologicalEventList, short reactionStatAnz)
    {
      chronologicalEventList.SetDynamicProperty("ReactionStatAnz",reactionStatAnz);
    }

    public static short GetReactionStatAnz(this IChronologicalEventList chronologicalEventList)
    {
    return (short) chronologicalEventList.GetDynamicProperty("ReactionStatAnz");
    }

    public static void SetTimeLastingAnz(this IChronologicalEventList chronologicalEventList, short timeLastingAnz)
    {
      chronologicalEventList.SetDynamicProperty("TimeLastingAnz",timeLastingAnz);
    }

    public static short GetTimeLastingAnz(this IChronologicalEventList chronologicalEventList)
    {
    return (short) chronologicalEventList.GetDynamicProperty("TimeLastingAnz");
    }

    public static void SetGroupsSymbol(this IChronologicalEventList chronologicalEventList, string groupsSymbol)
    {
      chronologicalEventList.SetDynamicProperty("GroupsSymbol",groupsSymbol);
    }

    public static string GetGroupsSymbol(this IChronologicalEventList chronologicalEventList)
    {
    return (string) chronologicalEventList.GetDynamicProperty("GroupsSymbol");
    }

    public static void SetGroupSymbolAnz(this IChronologicalEventList chronologicalEventList, short groupSymbolAnz)
    {
      chronologicalEventList.SetDynamicProperty("GroupSymbolAnz",groupSymbolAnz);
    }

    public static short GetGroupSymbolAnz(this IChronologicalEventList chronologicalEventList)
    {
    return (short) chronologicalEventList.GetDynamicProperty("GroupSymbolAnz");
    }

    public static void SetGroupSymbolStyle(this IChronologicalEventList chronologicalEventList, short groupSymbolStyle)
    {
      chronologicalEventList.SetDynamicProperty("GroupSymbolStyle",groupSymbolStyle);
    }

    public static short GetGroupSymbolStyle(this IChronologicalEventList chronologicalEventList)
    {
    return (short) chronologicalEventList.GetDynamicProperty("GroupSymbolStyle");
    }

    public static void SetResourceLabel(this IChronologicalEventList chronologicalEventList, string resourceLabel)
    {
      chronologicalEventList.SetDynamicProperty("ResourceLabel",resourceLabel);
    }

    public static string GetResourceLabel(this IChronologicalEventList chronologicalEventList)
    {
    return (string) chronologicalEventList.GetDynamicProperty("ResourceLabel");
    }

    public static void SetResourceLabelAnz(this IChronologicalEventList chronologicalEventList, short resourceLabelAnz)
    {
      chronologicalEventList.SetDynamicProperty("ResourceLabelAnz",resourceLabelAnz);
    }

    public static short GetResourceLabelAnz(this IChronologicalEventList chronologicalEventList)
    {
    return (short) chronologicalEventList.GetDynamicProperty("ResourceLabelAnz");
    }

    public static void SetArea(this IChronologicalEventList chronologicalEventList, string area)
    {
      chronologicalEventList.SetDynamicProperty("Area",area);
    }

    public static string GetArea(this IChronologicalEventList chronologicalEventList)
    {
    return (string) chronologicalEventList.GetDynamicProperty("Area");
    }

    public static void SetAreaAnz(this IChronologicalEventList chronologicalEventList, short areaAnz)
    {
      chronologicalEventList.SetDynamicProperty("AreaAnz",areaAnz);
    }

    public static short GetAreaAnz(this IChronologicalEventList chronologicalEventList)
    {
    return (short) chronologicalEventList.GetDynamicProperty("AreaAnz");
    }

    public static void SetAreaNr(this IChronologicalEventList chronologicalEventList, string areaNr)
    {
      chronologicalEventList.SetDynamicProperty("AreaNr",areaNr);
    }

    public static string GetAreaNr(this IChronologicalEventList chronologicalEventList)
    {
    return (string) chronologicalEventList.GetDynamicProperty("AreaNr");
    }

    public static void SetAreaNrAnz(this IChronologicalEventList chronologicalEventList, short areaNrAnz)
    {
      chronologicalEventList.SetDynamicProperty("AreaNrAnz",areaNrAnz);
    }

    public static short GetAreaNrAnz(this IChronologicalEventList chronologicalEventList)
    {
    return (short) chronologicalEventList.GetDynamicProperty("AreaNrAnz");
    }

    public static void SetClassSymbol(this IChronologicalEventList chronologicalEventList, string classSymbol)
    {
      chronologicalEventList.SetDynamicProperty("ClassSymbol",classSymbol);
    }

    public static string GetClassSymbol(this IChronologicalEventList chronologicalEventList)
    {
    return (string) chronologicalEventList.GetDynamicProperty("ClassSymbol");
    }

    public static void SetClassSymbolAnz(this IChronologicalEventList chronologicalEventList, short classSymbolAnz)
    {
      chronologicalEventList.SetDynamicProperty("ClassSymbolAnz",classSymbolAnz);
    }

    public static short GetClassSymbolAnz(this IChronologicalEventList chronologicalEventList)
    {
    return (short) chronologicalEventList.GetDynamicProperty("ClassSymbolAnz");
    }

    public static void SetClassSymbolStyle(this IChronologicalEventList chronologicalEventList, short classSymbolStyle)
    {
      chronologicalEventList.SetDynamicProperty("ClassSymbolStyle",classSymbolStyle);
    }

    public static short GetClassSymbolStyle(this IChronologicalEventList chronologicalEventList)
    {
    return (short) chronologicalEventList.GetDynamicProperty("ClassSymbolStyle");
    }

    public static void SetUnit(this IChronologicalEventList chronologicalEventList, string unit)
    {
      chronologicalEventList.SetDynamicProperty("Unit",unit);
    }

    public static string GetUnit(this IChronologicalEventList chronologicalEventList)
    {
    return (string) chronologicalEventList.GetDynamicProperty("Unit");
    }

    public static void SetUnitAnz(this IChronologicalEventList chronologicalEventList, short unitAnz)
    {
      chronologicalEventList.SetDynamicProperty("UnitAnz",unitAnz);
    }

    public static short GetUnitAnz(this IChronologicalEventList chronologicalEventList)
    {
    return (short) chronologicalEventList.GetDynamicProperty("UnitAnz");
    }

    public static void SetCause(this IChronologicalEventList chronologicalEventList, string cause)
    {
      chronologicalEventList.SetDynamicProperty("Cause",cause);
    }

    public static string GetCause(this IChronologicalEventList chronologicalEventList)
    {
    return (string) chronologicalEventList.GetDynamicProperty("Cause");
    }

    public static void SetCauseAnz(this IChronologicalEventList chronologicalEventList, short causeAnz)
    {
      chronologicalEventList.SetDynamicProperty("CauseAnz",causeAnz);
    }

    public static short GetCauseAnz(this IChronologicalEventList chronologicalEventList)
    {
    return (short) chronologicalEventList.GetDynamicProperty("CauseAnz");
    }

    public static void SetStatusStyle(this IChronologicalEventList chronologicalEventList, short statusStyle)
    {
      chronologicalEventList.SetDynamicProperty("StatusStyle",statusStyle);
    }

    public static short GetStatusStyle(this IChronologicalEventList chronologicalEventList)
    {
    return (short) chronologicalEventList.GetDynamicProperty("StatusStyle");
    }

    public static void SetLeavingTimeIntern(this IChronologicalEventList chronologicalEventList, string leavingTimeIntern)
    {
      chronologicalEventList.SetDynamicProperty("LeavingTimeIntern",leavingTimeIntern);
    }

    public static string GetLeavingTimeIntern(this IChronologicalEventList chronologicalEventList)
    {
    return (string) chronologicalEventList.GetDynamicProperty("LeavingTimeIntern");
    }

    public static void SetLeavingTimeExtern(this IChronologicalEventList chronologicalEventList, string leavingTimeExtern)
    {
      chronologicalEventList.SetDynamicProperty("LeavingTimeExtern",leavingTimeExtern);
    }

    public static string GetLeavingTimeExtern(this IChronologicalEventList chronologicalEventList)
    {
    return (string) chronologicalEventList.GetDynamicProperty("LeavingTimeExtern");
    }

    public static void SetComingTimeIntern(this IChronologicalEventList chronologicalEventList, string comingTimeIntern)
    {
      chronologicalEventList.SetDynamicProperty("ComingTimeIntern",comingTimeIntern);
    }

    public static string GetComingTimeIntern(this IChronologicalEventList chronologicalEventList)
    {
    return (string) chronologicalEventList.GetDynamicProperty("ComingTimeIntern");
    }

    public static void SetComingTimeExtern(this IChronologicalEventList chronologicalEventList, string comingTimeExtern)
    {
      chronologicalEventList.SetDynamicProperty("ComingTimeExtern",comingTimeExtern);
    }

    public static string GetComingTimeExtern(this IChronologicalEventList chronologicalEventList)
    {
    return (string) chronologicalEventList.GetDynamicProperty("ComingTimeExtern");
    }

    public static void SetReactivationTimeIntern(this IChronologicalEventList chronologicalEventList, string reactivationTimeIntern)
    {
      chronologicalEventList.SetDynamicProperty("ReactivationTimeIntern",reactivationTimeIntern);
    }

    public static string GetReactivationTimeIntern(this IChronologicalEventList chronologicalEventList)
    {
    return (string) chronologicalEventList.GetDynamicProperty("ReactivationTimeIntern");
    }

    public static void SetReactivationTimeExtern(this IChronologicalEventList chronologicalEventList, string reactivationTimeExtern)
    {
      chronologicalEventList.SetDynamicProperty("ReactivationTimeExtern",reactivationTimeExtern);
    }

    public static string GetReactivationTimeExtern(this IChronologicalEventList chronologicalEventList)
    {
    return (string) chronologicalEventList.GetDynamicProperty("ReactivationTimeExtern");
    }

    public static void SetLeavingTimeInternWidth(this IChronologicalEventList chronologicalEventList, short leavingTimeInternWidth)
    {
      chronologicalEventList.SetDynamicProperty("LeavingTimeInternWidth",leavingTimeInternWidth);
    }

    public static short GetLeavingTimeInternWidth(this IChronologicalEventList chronologicalEventList)
    {
    return (short) chronologicalEventList.GetDynamicProperty("LeavingTimeInternWidth");
    }

    public static void SetLeavingTimeExternWidth(this IChronologicalEventList chronologicalEventList, short leavingTimeExternWidth)
    {
      chronologicalEventList.SetDynamicProperty("LeavingTimeExternWidth",leavingTimeExternWidth);
    }

    public static short GetLeavingTimeExternWidth(this IChronologicalEventList chronologicalEventList)
    {
    return (short) chronologicalEventList.GetDynamicProperty("LeavingTimeExternWidth");
    }

    public static void SetComingTimeInternWidth(this IChronologicalEventList chronologicalEventList, short comingTimeInternWidth)
    {
      chronologicalEventList.SetDynamicProperty("ComingTimeInternWidth",comingTimeInternWidth);
    }

    public static short GetComingTimeInternWidth(this IChronologicalEventList chronologicalEventList)
    {
    return (short) chronologicalEventList.GetDynamicProperty("ComingTimeInternWidth");
    }

    public static void SetComingTimeExternWidth(this IChronologicalEventList chronologicalEventList, short comingTimeExternWidth)
    {
      chronologicalEventList.SetDynamicProperty("ComingTimeExternWidth",comingTimeExternWidth);
    }

    public static short GetComingTimeExternWidth(this IChronologicalEventList chronologicalEventList)
    {
    return (short) chronologicalEventList.GetDynamicProperty("ComingTimeExternWidth");
    }

    public static void SetReactivationTimeInternWidth(this IChronologicalEventList chronologicalEventList, short reactivationTimeInternWidth)
    {
      chronologicalEventList.SetDynamicProperty("ReactivationTimeInternWidth",reactivationTimeInternWidth);
    }

    public static short GetReactivationTimeInternWidth(this IChronologicalEventList chronologicalEventList)
    {
    return (short) chronologicalEventList.GetDynamicProperty("ReactivationTimeInternWidth");
    }

    public static void SetReactivationTimeExternWidth(this IChronologicalEventList chronologicalEventList, short reactivationTimeExternWidth)
    {
      chronologicalEventList.SetDynamicProperty("ReactivationTimeExternWidth",reactivationTimeExternWidth);
    }

    public static short GetReactivationTimeExternWidth(this IChronologicalEventList chronologicalEventList)
    {
    return (short) chronologicalEventList.GetDynamicProperty("ReactivationTimeExternWidth");
    }

    public static void SetEquipmentModelGroupWidth(this IChronologicalEventList chronologicalEventList, short equipmentModelGroupWidth)
    {
      chronologicalEventList.SetDynamicProperty("EquipmentModelGroupWidth",equipmentModelGroupWidth);
    }

    public static short GetEquipmentModelGroupWidth(this IChronologicalEventList chronologicalEventList)
    {
    return (short) chronologicalEventList.GetDynamicProperty("EquipmentModelGroupWidth");
    }

    public static void SetEquipmentModelGroup(this IChronologicalEventList chronologicalEventList, string equipmentModelGroup)
    {
      chronologicalEventList.SetDynamicProperty("EquipmentModelGroup",equipmentModelGroup);
    }

    public static string GetEquipmentModelGroup(this IChronologicalEventList chronologicalEventList)
    {
    return (string) chronologicalEventList.GetDynamicProperty("EquipmentModelGroup");
    }

    public static void SetSystemModel(this IChronologicalEventList chronologicalEventList, string systemModel)
    {
      chronologicalEventList.SetDynamicProperty("SystemModel",systemModel);
    }

    public static string GetSystemModel(this IChronologicalEventList chronologicalEventList)
    {
    return (string) chronologicalEventList.GetDynamicProperty("SystemModel");
    }

    public static void SetInternExternTimeDifference(this IChronologicalEventList chronologicalEventList, string internExternTimeDifference)
    {
      chronologicalEventList.SetDynamicProperty("InternExternTimeDifference",internExternTimeDifference);
    }

    public static string GetInternExternTimeDifference(this IChronologicalEventList chronologicalEventList)
    {
    return (string) chronologicalEventList.GetDynamicProperty("InternExternTimeDifference");
    }

    public static void SetInternExternTimeDifferenceWidth(this IChronologicalEventList chronologicalEventList, short internExternTimeDifferenceWidth)
    {
      chronologicalEventList.SetDynamicProperty("InternExternTimeDifferenceWidth",internExternTimeDifferenceWidth);
    }

    public static short GetInternExternTimeDifferenceWidth(this IChronologicalEventList chronologicalEventList)
    {
    return (short) chronologicalEventList.GetDynamicProperty("InternExternTimeDifferenceWidth");
    }

    public static void SetAmlLastModifyTitle(this IChronologicalEventList chronologicalEventList, string amlLastModifyTitle)
    {
      chronologicalEventList.SetDynamicProperty("AmlLastModifyTitle",amlLastModifyTitle);
    }

    public static string GetAmlLastModifyTitle(this IChronologicalEventList chronologicalEventList)
    {
    return (string) chronologicalEventList.GetDynamicProperty("AmlLastModifyTitle");
    }

    public static void SetAmlLastModifyTitleWidth(this IChronologicalEventList chronologicalEventList, short amlLastModifyTitleWidth)
    {
      chronologicalEventList.SetDynamicProperty("AmlLastModifyTitleWidth",amlLastModifyTitleWidth);
    }

    public static short GetAmlLastModifyTitleWidth(this IChronologicalEventList chronologicalEventList)
    {
    return (short) chronologicalEventList.GetDynamicProperty("AmlLastModifyTitleWidth");
    }

    public static void SetCategoryTitle(this IChronologicalEventList chronologicalEventList, string categoryTitle)
    {
      chronologicalEventList.SetDynamicProperty("CategoryTitle",categoryTitle);
    }

    public static string GetCategoryTitle(this IChronologicalEventList chronologicalEventList)
    {
    return (string) chronologicalEventList.GetDynamicProperty("CategoryTitle");
    }

    public static void SetCategoryTitleWidth(this IChronologicalEventList chronologicalEventList, short categoryTitleWidth)
    {
      chronologicalEventList.SetDynamicProperty("CategoryTitleWidth",categoryTitleWidth);
    }

    public static short GetCategoryTitleWidth(this IChronologicalEventList chronologicalEventList)
    {
    return (short) chronologicalEventList.GetDynamicProperty("CategoryTitleWidth");
    }

    public static void SetIsFilterActive(this IChronologicalEventList chronologicalEventList, bool isFilterActive)
    {
      chronologicalEventList.SetDynamicProperty("IsFilterActive",isFilterActive);
    }

    public static bool GetIsFilterActive(this IChronologicalEventList chronologicalEventList)
    {
    return (bool) chronologicalEventList.GetDynamicProperty("IsFilterActive");
    }

    public static void SetIsSubFind(this IChronologicalEventList chronologicalEventList, bool isSubFind)
    {
      chronologicalEventList.SetDynamicProperty("IsSubFind",isSubFind);
    }

    public static bool GetIsSubFind(this IChronologicalEventList chronologicalEventList)
    {
    return (bool) chronologicalEventList.GetDynamicProperty("IsSubFind");
    }

    public static void SetCondition(this IChronologicalEventList chronologicalEventList, ushort condition)
    {
      chronologicalEventList.SetDynamicProperty("Condition",condition);
    }

    public static ushort GetCondition(this IChronologicalEventList chronologicalEventList)
    {
    return (ushort) chronologicalEventList.GetDynamicProperty("Condition");
    }

    public static void SetExpression(this IChronologicalEventList chronologicalEventList, string expression)
    {
      chronologicalEventList.SetDynamicProperty("Expression",expression);
    }

    public static string GetExpression(this IChronologicalEventList chronologicalEventList)
    {
    return (string) chronologicalEventList.GetDynamicProperty("Expression");
    }

    public static void SetStatusMask(this IChronologicalEventList chronologicalEventList, ulong statusMask)
    {
      chronologicalEventList.SetDynamicProperty("StatusMask",statusMask);
    }

    public static ulong GetStatusMask(this IChronologicalEventList chronologicalEventList)
    {
    return (ulong) chronologicalEventList.GetDynamicProperty("StatusMask");
    }

  }
}
