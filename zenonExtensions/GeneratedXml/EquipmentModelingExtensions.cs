//AUTOGENERATED FILE. Do not make any manual changes. Any changes to this file will be overwritten.

using Scada.AddIn.Contracts.EquipmentModeling;

namespace zenonExtensions
{
  public static class EquipmentGroup
  {
    public static void SetGRP_GrpCls(this IEquipmentGroup equipmentGroup, object gRP_GrpCls)
    {
      equipmentGroup.SetDynamicProperty("GRP_GrpCls",gRP_GrpCls);
    }

    public static object GetGRP_GrpCls(this IEquipmentGroup equipmentGroup)
    {
    return (object) equipmentGroup.GetDynamicProperty("GRP_GrpCls");
    }

    public static void SetGRP_AlarmAggregation(this IEquipmentGroup equipmentGroup, object gRP_AlarmAggregation)
    {
      equipmentGroup.SetDynamicProperty("GRP_AlarmAggregation",gRP_AlarmAggregation);
    }

    public static object GetGRP_AlarmAggregation(this IEquipmentGroup equipmentGroup)
    {
    return (object) equipmentGroup.GetDynamicProperty("GRP_AlarmAggregation");
    }

    public static void SetItems(this IEquipmentGroup equipmentGroup, object items)
    {
      equipmentGroup.SetDynamicProperty("Items",items);
    }

    public static object GetItems(this IEquipmentGroup equipmentGroup)
    {
    return (object) equipmentGroup.GetDynamicProperty("Items");
    }

    public static void SetStatusVar(this IEquipmentGroup equipmentGroup, object statusVar)
    {
      equipmentGroup.SetDynamicProperty("StatusVar",statusVar);
    }

    public static object GetStatusVar(this IEquipmentGroup equipmentGroup)
    {
    return (object) equipmentGroup.GetDynamicProperty("StatusVar");
    }

    public static void SetAlarmVar(this IEquipmentGroup equipmentGroup, object alarmVar)
    {
      equipmentGroup.SetDynamicProperty("AlarmVar",alarmVar);
    }

    public static object GetAlarmVar(this IEquipmentGroup equipmentGroup)
    {
    return (object) equipmentGroup.GetDynamicProperty("AlarmVar");
    }

    public static void SetQuitVar(this IEquipmentGroup equipmentGroup, object quitVar)
    {
      equipmentGroup.SetDynamicProperty("QuitVar",quitVar);
    }

    public static object GetQuitVar(this IEquipmentGroup equipmentGroup)
    {
    return (object) equipmentGroup.GetDynamicProperty("QuitVar");
    }

    public static void SetNew(this IEquipmentGroup equipmentGroup, string z_new)
    {
      equipmentGroup.SetDynamicProperty("New",z_new);
    }

    public static string GetNew(this IEquipmentGroup equipmentGroup)
    {
    return (string) equipmentGroup.GetDynamicProperty("New");
    }

    public static void SetGRP_Authorization(this IEquipmentGroup equipmentGroup, object gRP_Authorization)
    {
      equipmentGroup.SetDynamicProperty("GRP_Authorization",gRP_Authorization);
    }

    public static object GetGRP_Authorization(this IEquipmentGroup equipmentGroup)
    {
    return (object) equipmentGroup.GetDynamicProperty("GRP_Authorization");
    }

    public static void SetGRP_IMM(this IEquipmentGroup equipmentGroup, object gRP_IMM)
    {
      equipmentGroup.SetDynamicProperty("GRP_IMM",gRP_IMM);
    }

    public static object GetGRP_IMM(this IEquipmentGroup equipmentGroup)
    {
    return (object) equipmentGroup.GetDynamicProperty("GRP_IMM");
    }

    public static void SetName(this IEquipmentGroup equipmentGroup, string name)
    {
      equipmentGroup.SetDynamicProperty("Name",name);
    }

    public static string GetName(this IEquipmentGroup equipmentGroup)
    {
    return (string) equipmentGroup.GetDynamicProperty("Name");
    }

    public static void SetSystemModelGroup(this IEquipmentGroup equipmentGroup, object systemModelGroup)
    {
      equipmentGroup.SetDynamicProperty("SystemModelGroup",systemModelGroup);
    }

    public static object GetSystemModelGroup(this IEquipmentGroup equipmentGroup)
    {
    return (object) equipmentGroup.GetDynamicProperty("SystemModelGroup");
    }

    public static void SetGuid(this IEquipmentGroup equipmentGroup, string guid)
    {
      equipmentGroup.SetDynamicProperty("Guid",guid);
    }

    public static string GetGuid(this IEquipmentGroup equipmentGroup)
    {
    return (string) equipmentGroup.GetDynamicProperty("Guid");
    }

    public static void SetAuthorizationAvailable(this IEquipmentGroup equipmentGroup, object authorizationAvailable)
    {
      equipmentGroup.SetDynamicProperty("AuthorizationAvailable",authorizationAvailable);
    }

    public static object GetAuthorizationAvailable(this IEquipmentGroup equipmentGroup)
    {
    return (object) equipmentGroup.GetDynamicProperty("AuthorizationAvailable");
    }

    public static void SetAuthorizationOwner(this IEquipmentGroup equipmentGroup, object authorizationOwner)
    {
      equipmentGroup.SetDynamicProperty("AuthorizationOwner",authorizationOwner);
    }

    public static object GetAuthorizationOwner(this IEquipmentGroup equipmentGroup)
    {
    return (object) equipmentGroup.GetDynamicProperty("AuthorizationOwner");
    }

    public static void SetIMMMaintCount(this IEquipmentGroup equipmentGroup, object iMMMaintCount)
    {
      equipmentGroup.SetDynamicProperty("IMMMaintCount",iMMMaintCount);
    }

    public static object GetIMMMaintCount(this IEquipmentGroup equipmentGroup)
    {
    return (object) equipmentGroup.GetDynamicProperty("IMMMaintCount");
    }

    public static void SetIMMMaintCountRecursive(this IEquipmentGroup equipmentGroup, object iMMMaintCountRecursive)
    {
      equipmentGroup.SetDynamicProperty("IMMMaintCountRecursive",iMMMaintCountRecursive);
    }

    public static object GetIMMMaintCountRecursive(this IEquipmentGroup equipmentGroup)
    {
    return (object) equipmentGroup.GetDynamicProperty("IMMMaintCountRecursive");
    }

    public static void SetClassName(this IEquipmentGroup equipmentGroup, string className)
    {
      equipmentGroup.SetDynamicProperty("ClassName",className);
    }

    public static string GetClassName(this IEquipmentGroup equipmentGroup)
    {
    return (string) equipmentGroup.GetDynamicProperty("ClassName");
    }

    public static void SetClass(this IEquipmentGroup equipmentGroup, ushort z_class)
    {
      equipmentGroup.SetDynamicProperty("Class",z_class);
    }

    public static ushort GetClass(this IEquipmentGroup equipmentGroup)
    {
    return (ushort) equipmentGroup.GetDynamicProperty("Class");
    }

    public static void SetDeleteEntry(this IEquipmentGroup equipmentGroup, string deleteEntry)
    {
      equipmentGroup.SetDynamicProperty("DeleteEntry",deleteEntry);
    }

    public static string GetDeleteEntry(this IEquipmentGroup equipmentGroup)
    {
    return (string) equipmentGroup.GetDynamicProperty("DeleteEntry");
    }

  }
}
