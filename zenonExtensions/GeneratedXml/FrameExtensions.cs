//AUTOGENERATED FILE. Do not make any manual changes. Any changes to this file will be overwritten.

using Scada.AddIn.Contracts.Frame;

namespace zenonExtensions
{
  public static class Frame
  {
    public static void SetGRP_General(this IFrame frame, object gRP_General)
    {
      frame.SetDynamicProperty("GRP_General",gRP_General);
    }

    public static object GetGRP_General(this IFrame frame)
    {
    return (object) frame.GetDynamicProperty("GRP_General");
    }

    public static void SetGRP_BackgroundPicture(this IFrame frame, object gRP_BackgroundPicture)
    {
      frame.SetDynamicProperty("GRP_BackgroundPicture",gRP_BackgroundPicture);
    }

    public static object GetGRP_BackgroundPicture(this IFrame frame)
    {
    return (object) frame.GetDynamicProperty("GRP_BackgroundPicture");
    }

    public static void SetGRP_Position(this IFrame frame, object gRP_Position)
    {
      frame.SetDynamicProperty("GRP_Position",gRP_Position);
    }

    public static object GetGRP_Position(this IFrame frame)
    {
    return (object) frame.GetDynamicProperty("GRP_Position");
    }

    public static void SetGRP_TemplateReference(this IFrame frame, object gRP_TemplateReference)
    {
      frame.SetDynamicProperty("GRP_TemplateReference",gRP_TemplateReference);
    }

    public static object GetGRP_TemplateReference(this IFrame frame)
    {
    return (object) frame.GetDynamicProperty("GRP_TemplateReference");
    }

    public static void SetGRP_PrimaryReference(this IFrame frame, object gRP_PrimaryReference)
    {
      frame.SetDynamicProperty("GRP_PrimaryReference",gRP_PrimaryReference);
    }

    public static object GetGRP_PrimaryReference(this IFrame frame)
    {
    return (object) frame.GetDynamicProperty("GRP_PrimaryReference");
    }

    public static void SetGRP_AlternativeReference(this IFrame frame, object gRP_AlternativeReference)
    {
      frame.SetDynamicProperty("GRP_AlternativeReference",gRP_AlternativeReference);
    }

    public static object GetGRP_AlternativeReference(this IFrame frame)
    {
    return (object) frame.GetDynamicProperty("GRP_AlternativeReference");
    }

    public static void SetGRP_FreeTemplateShape(this IFrame frame, object gRP_FreeTemplateShape)
    {
      frame.SetDynamicProperty("GRP_FreeTemplateShape",gRP_FreeTemplateShape);
    }

    public static object GetGRP_FreeTemplateShape(this IFrame frame)
    {
    return (object) frame.GetDynamicProperty("GRP_FreeTemplateShape");
    }

    public static void SetGRP_Frame(this IFrame frame, object gRP_Frame)
    {
      frame.SetDynamicProperty("GRP_Frame",gRP_Frame);
    }

    public static object GetGRP_Frame(this IFrame frame)
    {
    return (object) frame.GetDynamicProperty("GRP_Frame");
    }

    public static void SetVisibleInEditor(this IFrame frame, bool visibleInEditor)
    {
      frame.SetDynamicProperty("VisibleInEditor",visibleInEditor);
    }

    public static bool GetVisibleInEditor(this IFrame frame)
    {
    return (bool) frame.GetDynamicProperty("VisibleInEditor");
    }

    public static void SetModifiedCnt(this IFrame frame, uint modifiedCnt)
    {
      frame.SetDynamicProperty("ModifiedCnt",modifiedCnt);
    }

    public static uint GetModifiedCnt(this IFrame frame)
    {
    return (uint) frame.GetDynamicProperty("ModifiedCnt");
    }

    public static void SetSoModifiedCnt(this IFrame frame, uint soModifiedCnt)
    {
      frame.SetDynamicProperty("SoModifiedCnt",soModifiedCnt);
    }

    public static uint GetSoModifiedCnt(this IFrame frame)
    {
    return (uint) frame.GetDynamicProperty("SoModifiedCnt");
    }

    public static void SetTemplateName(this IFrame frame, string templateName)
    {
      frame.SetDynamicProperty("TemplateName",templateName);
    }

    public static string GetTemplateName(this IFrame frame)
    {
    return (string) frame.GetDynamicProperty("TemplateName");
    }

    public static void SetCloseOnClickOutside(this IFrame frame, bool closeOnClickOutside)
    {
      frame.SetDynamicProperty("CloseOnClickOutside",closeOnClickOutside);
    }

    public static bool GetCloseOnClickOutside(this IFrame frame)
    {
    return (bool) frame.GetDynamicProperty("CloseOnClickOutside");
    }

    public static void SetIgnoreCloseOnClick(this IFrame frame, bool ignoreCloseOnClick)
    {
      frame.SetDynamicProperty("IgnoreCloseOnClick",ignoreCloseOnClick);
    }

    public static bool GetIgnoreCloseOnClick(this IFrame frame)
    {
    return (bool) frame.GetDynamicProperty("IgnoreCloseOnClick");
    }

    public static void SetSystemModelGroup(this IFrame frame, object systemModelGroup)
    {
      frame.SetDynamicProperty("SystemModelGroup",systemModelGroup);
    }

    public static object GetSystemModelGroup(this IFrame frame)
    {
    return (object) frame.GetDynamicProperty("SystemModelGroup");
    }

    public static void SetUseFreeForming(this IFrame frame, bool useFreeForming)
    {
      frame.SetDynamicProperty("UseFreeForming",useFreeForming);
    }

    public static bool GetUseFreeForming(this IFrame frame)
    {
    return (bool) frame.GetDynamicProperty("UseFreeForming");
    }

    public static void SetDefineFreeForm(this IFrame frame, object defineFreeForm)
    {
      frame.SetDynamicProperty("DefineFreeForm",defineFreeForm);
    }

    public static object GetDefineFreeForm(this IFrame frame)
    {
    return (object) frame.GetDynamicProperty("DefineFreeForm");
    }

    public static void SetPosLeft(this IFrame frame, int posLeft)
    {
      frame.SetDynamicProperty("PosLeft",posLeft);
    }

    public static int GetPosLeft(this IFrame frame)
    {
    return (int) frame.GetDynamicProperty("PosLeft");
    }

    public static void SetPosRight(this IFrame frame, int posRight)
    {
      frame.SetDynamicProperty("PosRight",posRight);
    }

    public static int GetPosRight(this IFrame frame)
    {
    return (int) frame.GetDynamicProperty("PosRight");
    }

    public static void SetPosTop(this IFrame frame, int posTop)
    {
      frame.SetDynamicProperty("PosTop",posTop);
    }

    public static int GetPosTop(this IFrame frame)
    {
    return (int) frame.GetDynamicProperty("PosTop");
    }

    public static void SetPosBottom(this IFrame frame, int posBottom)
    {
      frame.SetDynamicProperty("PosBottom",posBottom);
    }

    public static int GetPosBottom(this IFrame frame)
    {
    return (int) frame.GetDynamicProperty("PosBottom");
    }

    public static void SetPosWidth(this IFrame frame, int posWidth)
    {
      frame.SetDynamicProperty("PosWidth",posWidth);
    }

    public static int GetPosWidth(this IFrame frame)
    {
    return (int) frame.GetDynamicProperty("PosWidth");
    }

    public static void SetPosHeight(this IFrame frame, int posHeight)
    {
      frame.SetDynamicProperty("PosHeight",posHeight);
    }

    public static int GetPosHeight(this IFrame frame)
    {
    return (int) frame.GetDynamicProperty("PosHeight");
    }

    public static void SetPosWidthMin(this IFrame frame, uint posWidthMin)
    {
      frame.SetDynamicProperty("PosWidthMin",posWidthMin);
    }

    public static uint GetPosWidthMin(this IFrame frame)
    {
    return (uint) frame.GetDynamicProperty("PosWidthMin");
    }

    public static void SetPosOpeningWidth(this IFrame frame, uint posOpeningWidth)
    {
      frame.SetDynamicProperty("PosOpeningWidth",posOpeningWidth);
    }

    public static uint GetPosOpeningWidth(this IFrame frame)
    {
    return (uint) frame.GetDynamicProperty("PosOpeningWidth");
    }

    public static void SetPosHeightMin(this IFrame frame, uint posHeightMin)
    {
      frame.SetDynamicProperty("PosHeightMin",posHeightMin);
    }

    public static uint GetPosHeightMin(this IFrame frame)
    {
    return (uint) frame.GetDynamicProperty("PosHeightMin");
    }

    public static void SetPosOpeningHeight(this IFrame frame, uint posOpeningHeight)
    {
      frame.SetDynamicProperty("PosOpeningHeight",posOpeningHeight);
    }

    public static uint GetPosOpeningHeight(this IFrame frame)
    {
    return (uint) frame.GetDynamicProperty("PosOpeningHeight");
    }

    public static void SetOpeningSizeType(this IFrame frame, uint openingSizeType)
    {
      frame.SetDynamicProperty("OpeningSizeType",openingSizeType);
    }

    public static uint GetOpeningSizeType(this IFrame frame)
    {
    return (uint) frame.GetDynamicProperty("OpeningSizeType");
    }

    public static void SetOpeningSizeValue(this IFrame frame, uint openingSizeValue)
    {
      frame.SetDynamicProperty("OpeningSizeValue",openingSizeValue);
    }

    public static uint GetOpeningSizeValue(this IFrame frame)
    {
    return (uint) frame.GetDynamicProperty("OpeningSizeValue");
    }

    public static void SetMinSizeType(this IFrame frame, uint minSizeType)
    {
      frame.SetDynamicProperty("MinSizeType",minSizeType);
    }

    public static uint GetMinSizeType(this IFrame frame)
    {
    return (uint) frame.GetDynamicProperty("MinSizeType");
    }

    public static void SetMinSizeValue(this IFrame frame, uint minSizeValue)
    {
      frame.SetDynamicProperty("MinSizeValue",minSizeValue);
    }

    public static uint GetMinSizeValue(this IFrame frame)
    {
    return (uint) frame.GetDynamicProperty("MinSizeValue");
    }

    public static void SetLimitationType(this IFrame frame, uint limitationType)
    {
      frame.SetDynamicProperty("LimitationType",limitationType);
    }

    public static uint GetLimitationType(this IFrame frame)
    {
    return (uint) frame.GetDynamicProperty("LimitationType");
    }

    public static void SetLimitationArea(this IFrame frame, uint limitationArea)
    {
      frame.SetDynamicProperty("LimitationArea",limitationArea);
    }

    public static uint GetLimitationArea(this IFrame frame)
    {
    return (uint) frame.GetDynamicProperty("LimitationArea");
    }

    public static void SetLimitationContactPointSize(this IFrame frame, uint limitationContactPointSize)
    {
      frame.SetDynamicProperty("LimitationContactPointSize",limitationContactPointSize);
    }

    public static uint GetLimitationContactPointSize(this IFrame frame)
    {
    return (uint) frame.GetDynamicProperty("LimitationContactPointSize");
    }

    public static void SetPosRelative(this IFrame frame, short posRelative)
    {
      frame.SetDynamicProperty("PosRelative",posRelative);
    }

    public static short GetPosRelative(this IFrame frame)
    {
    return (short) frame.GetDynamicProperty("PosRelative");
    }

    public static void SetPosType(this IFrame frame, short posType)
    {
      frame.SetDynamicProperty("PosType",posType);
    }

    public static short GetPosType(this IFrame frame)
    {
    return (short) frame.GetDynamicProperty("PosType");
    }

    public static void SetNoMoveOnReopen(this IFrame frame, bool noMoveOnReopen)
    {
      frame.SetDynamicProperty("NoMoveOnReopen",noMoveOnReopen);
    }

    public static bool GetNoMoveOnReopen(this IFrame frame)
    {
    return (bool) frame.GetDynamicProperty("NoMoveOnReopen");
    }

    public static void SetRefVert(this IFrame frame, short refVert)
    {
      frame.SetDynamicProperty("RefVert",refVert);
    }

    public static short GetRefVert(this IFrame frame)
    {
    return (short) frame.GetDynamicProperty("RefVert");
    }

    public static void SetRefHorz(this IFrame frame, short refHorz)
    {
      frame.SetDynamicProperty("RefHorz",refHorz);
    }

    public static short GetRefHorz(this IFrame frame)
    {
    return (short) frame.GetDynamicProperty("RefHorz");
    }

    public static void SetAltRefVert(this IFrame frame, short altRefVert)
    {
      frame.SetDynamicProperty("AltRefVert",altRefVert);
    }

    public static short GetAltRefVert(this IFrame frame)
    {
    return (short) frame.GetDynamicProperty("AltRefVert");
    }

    public static void SetAltRefHorz(this IFrame frame, short altRefHorz)
    {
      frame.SetDynamicProperty("AltRefHorz",altRefHorz);
    }

    public static short GetAltRefHorz(this IFrame frame)
    {
    return (short) frame.GetDynamicProperty("AltRefHorz");
    }

    public static void SetPosVert(this IFrame frame, short posVert)
    {
      frame.SetDynamicProperty("PosVert",posVert);
    }

    public static short GetPosVert(this IFrame frame)
    {
    return (short) frame.GetDynamicProperty("PosVert");
    }

    public static void SetPosHorz(this IFrame frame, short posHorz)
    {
      frame.SetDynamicProperty("PosHorz",posHorz);
    }

    public static short GetPosHorz(this IFrame frame)
    {
    return (short) frame.GetDynamicProperty("PosHorz");
    }

    public static void SetPixelVert(this IFrame frame, int pixelVert)
    {
      frame.SetDynamicProperty("PixelVert",pixelVert);
    }

    public static int GetPixelVert(this IFrame frame)
    {
    return (int) frame.GetDynamicProperty("PixelVert");
    }

    public static void SetPixelHorz(this IFrame frame, int pixelHorz)
    {
      frame.SetDynamicProperty("PixelHorz",pixelHorz);
    }

    public static int GetPixelHorz(this IFrame frame)
    {
    return (int) frame.GetDynamicProperty("PixelHorz");
    }

    public static void SetAltPosVert(this IFrame frame, short altPosVert)
    {
      frame.SetDynamicProperty("AltPosVert",altPosVert);
    }

    public static short GetAltPosVert(this IFrame frame)
    {
    return (short) frame.GetDynamicProperty("AltPosVert");
    }

    public static void SetAltPosHorz(this IFrame frame, short altPosHorz)
    {
      frame.SetDynamicProperty("AltPosHorz",altPosHorz);
    }

    public static short GetAltPosHorz(this IFrame frame)
    {
    return (short) frame.GetDynamicProperty("AltPosHorz");
    }

    public static void SetAltPixelVert(this IFrame frame, int altPixelVert)
    {
      frame.SetDynamicProperty("AltPixelVert",altPixelVert);
    }

    public static int GetAltPixelVert(this IFrame frame)
    {
    return (int) frame.GetDynamicProperty("AltPixelVert");
    }

    public static void SetAltPixelHorz(this IFrame frame, int altPixelHorz)
    {
      frame.SetDynamicProperty("AltPixelHorz",altPixelHorz);
    }

    public static int GetAltPixelHorz(this IFrame frame)
    {
    return (int) frame.GetDynamicProperty("AltPixelHorz");
    }

    public static void SetBackgroundPicture(this IFrame frame, string backgroundPicture)
    {
      frame.SetDynamicProperty("BackgroundPicture",backgroundPicture);
    }

    public static string GetBackgroundPicture(this IFrame frame)
    {
    return (string) frame.GetDynamicProperty("BackgroundPicture");
    }

    public static void SetBackgroundPictureStyle(this IFrame frame, short backgroundPictureStyle)
    {
      frame.SetDynamicProperty("BackgroundPictureStyle",backgroundPictureStyle);
    }

    public static short GetBackgroundPictureStyle(this IFrame frame)
    {
    return (short) frame.GetDynamicProperty("BackgroundPictureStyle");
    }

    public static void SetStandardPosition(this IFrame frame, bool standardPosition)
    {
      frame.SetDynamicProperty("StandardPosition",standardPosition);
    }

    public static bool GetStandardPosition(this IFrame frame)
    {
    return (bool) frame.GetDynamicProperty("StandardPosition");
    }

  }
}
